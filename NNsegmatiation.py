# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1q7dVJrtXpKp-4YF0-_rsVcSN7Mj-82zT
"""

import tensorflow
print(tensorflow.__version__)

import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import sklearn
from sklearn.model_selection import train_test_split
from keras import Sequential
from keras.layers import Dense
import tensorflow as tf
import keras.utils
from numpy import array

data = pd.read_csv('training_set.txt', sep=",")
print(data.head(10))
print(data.describe(include='all'))
X= data.iloc[:,0:25]
y= data.iloc[:,25]
X = tf.keras.utils.normalize(X,axis=1)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3)
from sklearn.preprocessing import StandardScaler
sc = StandardScaler() 
X = sc.fit_transform(X) 
y_test = pd.get_dummies(y_test)
y_train = pd.get_dummies(y_train)
print(f'X_train={X_train.shape}')
print(f'y_train={y_train.shape}')
print(f'X_test={X_test.shape}')
print(f'y_test={y_test.shape}')

print(y_test)
print(y_train)

from keras.models import Sequential
from keras.layers import Dense, Activation, Flatten
classifier = Sequential()

#First Hidden Layer
classifier.add(Dense(512, activation='relu', kernel_initializer='random_normal', input_dim=25))

#Output Layer
classifier.add(Dense(6, activation='softmax', kernel_initializer='random_normal'))

classifier.compile(optimizer ='adam',loss='categorical_crossentropy', metrics =['accuracy'])
classifier.fit(X_train,y_train, batch_size=10, epochs=100)

"""# Nuova sezione"""

eval_model=classifier.evaluate(X_train, y_train)
eval_model

y_pred=classifier.predict(X_test)
y_pred =(y_pred>0.5)

from sklearn.metrics import confusion_matrix
cm=confusion_matrix(y_test.values.argmax(axis=1), y_pred.argmax(axis=1))
print(cm)